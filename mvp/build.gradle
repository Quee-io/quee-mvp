apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

apply plugin: 'com.jfrog.bintray'
apply plugin: 'maven-publish'
apply plugin: 'com.github.dcendents.android-maven'

version = '1.0.0.0'
group = 'io.quee.mvp'
android {
    compileSdkVersion 29
    buildToolsVersion "29.0.3"


    defaultConfig {
        minSdkVersion 16
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"
        consumerProguardFiles 'consumer-rules.pro'
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    dataBinding {
        enabled true
    }
    compileOptions {
        targetCompatibility JavaVersion.VERSION_1_8
        sourceCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    def activity_version = "1.1.0"
    def fragment_version = "1.2.1"
    api(fileTree(dir: 'libs', include: ['*.jar']))
    kapt "com.android.databinding:compiler:$gradle_version"
    api("org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version")
    api('androidx.multidex:multidex:2.0.1')
    api('androidx.appcompat:appcompat:1.1.0')
    api('androidx.core:core-ktx:1.2.0')
    api('com.google.android.material:material:1.2.0-alpha04')

    api("com.squareup.retrofit2:retrofit:$rootProject.retrofitVersion")
    api("com.squareup.retrofit2:converter-jackson:$rootProject.retrofitVersion")
    api("com.squareup.retrofit2:adapter-rxjava2:$rootProject.retrofitVersion")
    api("com.squareup.okhttp3:logging-interceptor:$rootProject.okhttploggingVersion")
    api("com.squareup.okhttp3:okhttp:$rootProject.okhttpVersion")
    api("com.fasterxml.jackson.module:jackson-module-kotlin:2.10.1")

    api("io.reactivex.rxjava2:rxjava:$rootProject.rxjavaVersion")
    api("io.reactivex.rxjava2:rxandroid:$rootProject.rxandroidVersion")
    api("io.reactivex.rxjava2:rxkotlin:$rootProject.rxkotlinVersion")

    api("androidx.activity:activity-ktx:$activity_version")
    api("androidx.fragment:fragment-ktx:$fragment_version")
    api('android.arch.lifecycle:extensions:1.1.1')

    api('io.quee.fragmentation:fragmentation:1.0.0.2')
    api('io.quee.fragmentation:fragmentation-core:1.0.0.2')
    api('io.quee.fragmentation:fragmentation-swipeback:1.0.0.2')

    api('com.treebo:internetavailabilitychecker:1.0.4')
}

install {
    repositories.mavenInstaller {
        pom.project {
            name 'mvp'
            description 'A powerful library that manage Fragment for Android'
            url 'https://github.com/Quee-io/quee-mvp'
            inceptionYear '2020'

            packaging 'aar'
            groupId 'io.quee.mvp'
            artifactId 'mvp'
            version '1.0.0.0'

            licenses {
                license {
                    name 'The Apache Software License, Version 2.0'
                    url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    distribution 'repo'
                }
            }
            scm {
                connection 'https://github.com/Quee-io/quee-mvp.git'
                url 'https://github.com/Quee-io/quee-mvp'

            }
            developers {
                developer {
                    name 'Ibrahim AlTamimi'
                }
            }
        }
    }
}

bintray {
    user = project.hasProperty('BINTRAY_USER') ? project.property('BINTRAY_USER') : System.getenv('BINTRAY_USER')
    key = project.hasProperty('BINTRAY_API_KEY') ? project.property('BINTRAY_API_KEY') : System.getenv('BINTRAY_API_KEY')
    configurations = ['archives']
    pkg {
        repo = 'mvp-architecture'
        name = 'mvp'
        userOrg = 'quee'
        licenses = ['Apache-2.0']
        vcsUrl = 'https://github.com/Quee-io/quee-mvp.git'
        version {
            name = '1.0.0.0'
            desc = 'Android MVP architecture library'
            vcsTag = '1.0.0.0'
            attributes = ['gradle-plugin': 'com.use.less:com.use.less.gradle:gradle-useless-plugin']
        }
    }
}