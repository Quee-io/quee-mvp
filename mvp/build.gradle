apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'

apply plugin: 'com.bmuschko.nexus'

archivesBaseName = 'quee-mvp'
version = 'v1.2.6'
group = 'io.quee.mvp'


android {
    compileSdkVersion 30
    buildToolsVersion '30.0.3'


    defaultConfig {
        minSdkVersion 16
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"
        consumerProguardFiles 'consumer-rules.pro'
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    buildFeatures {
        dataBinding true
    }
    compileOptions {
        targetCompatibility JavaVersion.VERSION_1_8
        sourceCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    def activity_version = '1.2.3'
    def fragment_version = '1.3.3'
    api(fileTree(dir: 'libs', include: ['*.jar']))
    kapt "com.android.databinding:compiler:$gradle_version"
    api("org.jetbrains.kotlin:kotlin-stdlib-jdk8:1.5.0")
    api("org.jetbrains.kotlin:kotlin-reflect:1.5.0")
    api('androidx.multidex:multidex:2.0.1')
    api('androidx.appcompat:appcompat:1.2.0')
    api('androidx.core:core-ktx:1.3.2')
    api('com.google.android.material:material:1.3.0')

    api("com.squareup.retrofit2:retrofit:$rootProject.retrofitVersion")
    api("com.squareup.retrofit2:converter-jackson:$rootProject.retrofitVersion")
    api("com.squareup.retrofit2:adapter-rxjava3:$rootProject.retrofitVersion")
    api("com.squareup.okhttp3:logging-interceptor:$rootProject.okhttploggingVersion")
    api("com.squareup.okhttp3:okhttp:$rootProject.okhttpVersion")
    api('com.fasterxml.jackson.module:jackson-module-kotlin:2.12.2')

    api("io.reactivex.rxjava3:rxkotlin:3.0.1")
    api("io.reactivex.rxjava3:rxandroid:3.0.0")

    api("androidx.activity:activity-ktx:$activity_version")
    api("androidx.fragment:fragment-ktx:$fragment_version")
    api('android.arch.lifecycle:extensions:1.1.1')

    api('io.quee.fragmentation:fragmentation:1.0.0.2')
    api('io.quee.fragmentation:fragmentation-core:1.0.0.2')
    api('io.quee.fragmentation:fragmentation-swipeback:1.0.0.2')

}
extraArchive {
    sources = true
    javadoc = true
}

modifyPom {
    project {
        name 'quee-mvp'
        description 'Quee MVP Archeticture.'
        url 'https://github.com/Quee-io/quee-mvp'
        inceptionYear '2020'

        scm {
            url 'https://github.com/Quee-io/quee-mvp'
            connection 'scm:https://github.com/Quee-io/quee-mvp.git'
            developerConnection 'scm:git://github.com/Quee-io/quee-mvp.git'
        }

        licenses {
            license {
                name 'The Apache Software License, Version 2.0'
                url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                distribution 'repo'
            }
        }

        developers {
            developer {
                id 'iloom'
                name 'Ibrahim AlTamimi'
                email 'ibm.iloom@gmail.com'
            }
        }
    }
}
nexus {
    sign = true
    repositoryUrl = 'https://oss.sonatype.org/service/local/staging/deploy/maven2/'
    snapshotRepositoryUrl = 'https://oss.sonatype.org/content/repositories/snapshots/'
}